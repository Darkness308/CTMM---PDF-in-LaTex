name: PR Content Validation

"on":
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-pr-content:
    runs-on: ubuntu-latest
    name: Validate PR has reviewable content
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Check for file changes
      id: changes
      timeout-minutes: 5
      run: |
        # Get the base and head commits
        BASE_SHA="${{ github.event.pull_request.base.sha }}"
        HEAD_SHA="${{ github.event.pull_request.head.sha }}"
        
        echo "üîç Checking PR changes between $BASE_SHA and $HEAD_SHA"
        
        # Verify commits exist
        if ! git rev-parse --verify "$BASE_SHA" >/dev/null 2>&1; then
          echo "‚ö†Ô∏è  Base SHA $BASE_SHA not found, falling back to main"
          BASE_SHA="main"
        fi
        
        if ! git rev-parse --verify "$HEAD_SHA" >/dev/null 2>&1; then
          echo "‚ö†Ô∏è  Head SHA $HEAD_SHA not found, using current HEAD"
          HEAD_SHA="HEAD"
        fi
        
        # Count changed files
        CHANGED_FILES=$(git diff --name-only $BASE_SHA..$HEAD_SHA | wc -l)
        ADDED_LINES=$(git diff --numstat $BASE_SHA..$HEAD_SHA | awk 'BEGIN{sum=0} {sum += $1} END {print sum+0}')
        DELETED_LINES=$(git diff --numstat $BASE_SHA..$HEAD_SHA | awk 'BEGIN{sum=0} {sum += $2} END {print sum+0}')
        
        echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "added_lines=$ADDED_LINES" >> $GITHUB_OUTPUT
        echo "deleted_lines=$DELETED_LINES" >> $GITHUB_OUTPUT
        
        echo "üìä PR Statistics:"
        echo "- Changed files: $CHANGED_FILES"
        echo "- Added lines: $ADDED_LINES"
        echo "- Deleted lines: $DELETED_LINES"
        
    - name: Validate PR has content
      run: |
        CHANGED_FILES="${{ steps.changes.outputs.changed_files }}"
        ADDED_LINES="${{ steps.changes.outputs.added_lines }}"
        
        if [ "$CHANGED_FILES" -eq 0 ]; then
          echo "‚ùå Error: This PR has no file changes."
          echo "Copilot cannot review PRs without any changed files."
          echo "Please ensure your PR includes actual code or documentation changes."
          exit 1
        fi
        
        if [ "$ADDED_LINES" -eq 0 ] && [ "${{ steps.changes.outputs.deleted_lines }}" -eq 0 ]; then
          echo "‚ùå Error: This PR has no content changes (0 additions, 0 deletions)."
          echo "Please include meaningful changes for Copilot to review."
          exit 1
        fi
        
        echo "‚úÖ PR validation passed: $CHANGED_FILES file(s) changed, $ADDED_LINES line(s) added"
    - name: Run CTMM build check
      timeout-minutes: 10
      run: |
        echo "üîß Running CTMM build system check..."
        python3 ctmm_build.py || {
          echo "‚ö†Ô∏è  CTMM build check failed, but PR validation can continue"
          echo "This may indicate infrastructure issues rather than code problems"
          exit 0
        }
    - name: Comment on PR if validation fails
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ‚ö†Ô∏è PR Content Validation Failed

              This pull request appears to have no reviewable content:
              - Changed files: ${{ steps.changes.outputs.changed_files }}
              - Added lines: ${{ steps.changes.outputs.added_lines }}
              - Deleted lines: ${{ steps.changes.outputs.deleted_lines }}

              **Why this matters:** Copilot cannot review pull requests that contain no file changes or content modifications.
              
              ### To fix this issue:
              1. Ensure you have committed and pushed actual changes to files
              2. Check that your changes are included in this PR branch
              3. Verify the PR is comparing the correct base and head branches
              ### Need help?
              - Review the [contributing guidelines](README.md)
              - Check the [CTMM build system documentation](.github/copilot-instructions.md)
              - Run \\\`python3 ctmm_build.py\\\` locally to test your changes`
          })